# environment is the type of environment we're deploying to, e.g. "development" or "production"
environment: production
# image is the identifier for the Docker image to use for the main deployment
image: ffc-elm-plan-service
# name is the name to set in metadata for deployed resources
name: ffc-elm-plan-service
# namespace is the namespace to deploy into
namespace: ffc-elm
# workstream is the FFC workstream responsible for this deployment, used for rolebindings
workstream: ffc-elm

# container collects options for the app container controlled by the deployment
container:
  allowPrivilegeEscalation: false
  args: ["npm --no-update-notifier run migrate && node index"]
  command: ["/bin/sh","-c"]
  imagePullPolicy: Always
  limitCpu: 120m
  limitMemory: 120Mi
  port: 3003
  readOnlyRootFilesystem: true
  requestMemory: 60Mi
  requestCpu: 60m

# containerConfigMap collects options for the ConfigMap that should be mounted into the container
containerConfigMap:
  name: ffc-elm-plan-service-config-map

# containerSecret collects options for the Secret that should be mounted into the container
containerSecret:
  name: ffc-elm-plan-service-container-secret
  type: Opaque
  
# deployment collects options for this chart's Deployment template
deployment:
  minReadySeconds: 10
  priorityClassName: low
  redeployOnChange: update this field to force a change
  replicas: 1
  restartPolicy: Always
  runAsNonRoot: true
  runAsUser: 1000

# labels collects values for some standard labels to apply to deployed resources
labels:
  component: plan-service

# postgres collects connection details for interacting with the required Postgres database
postgresService:
  postgresDatabase: ffc_elm_plan
  # postgresService.postgresExternalName is the external host name to which PostgreSQL
  # requests should be forwarded. If empty, PostgreSQL is assumed to be
  # within the cluster and accessible at postgresService.postgresHost
  postgresExternalName:
  postgresHost: ffc-elm-plan-postgres
  postgresPassword: changeme
  postgresUsername: postgres@ffc_elm_plan
  postgresPort: 5432

# probes collects configuration for application health probes
probes:
  # livenessProbe define's the check for this deployment being live
  livenessProbe:
    path: /healthz
    port: 3003
    initialDelaySeconds: 10
    periodSeconds: 10
    failureThreshold: 3

  # readinessProbe define's the check for this deployment being ready to receive requests
  readinessProbe:
    path: /healthy
    port: 3003
    initialDelaySeconds: 10
    periodSeconds: 10
    failureThreshold: 3

# queues collects connection details for interacting with required message queues
queues:
  planEventQueue:
    create: false
    endpoint: http://ffc-elm-plan-message-queue:9324
    name: ffc-elm-plan-event
    region: eu-west-2
    url: http://ffc-elm-plan-message-queue:9324/queue/ffc-elm-plan-event

# serviceAccount collects options for the ServiceAccount resource
serviceAccount:
  name: ffc-elm-plan-service-account
  roleArn:
